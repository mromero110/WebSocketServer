// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using SVAIOT_Database;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace SVAIOT_Database
{
    public partial class SvaiotContext
    {
        private SvaiotContextProcedures _procedures;

        public virtual SvaiotContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new SvaiotContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public SvaiotContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class SvaiotContextProcedures
    {
        private readonly SvaiotContext _context;

        public SvaiotContextProcedures(SvaiotContext context)
        {
            _context = context;
        }

        public virtual async Task<int> add_device_configurationAsync(int? id_dispositivo, bool? zona_wifi, bool? apagado_emergencia, bool? alarma, bool? camara, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "id_dispositivo",
                    Value = id_dispositivo ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "zona_wifi",
                    Value = zona_wifi ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Bit,
                },
                new SqlParameter
                {
                    ParameterName = "apagado_emergencia",
                    Value = apagado_emergencia ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Bit,
                },
                new SqlParameter
                {
                    ParameterName = "alarma",
                    Value = alarma ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Bit,
                },
                new SqlParameter
                {
                    ParameterName = "camara",
                    Value = camara ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Bit,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[add_device_configuration] @id_dispositivo, @zona_wifi, @apagado_emergencia, @alarma, @camara", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
